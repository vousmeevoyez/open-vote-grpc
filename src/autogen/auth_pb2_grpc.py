# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import autogen.auth_pb2 as auth__pb2


class AuthStub(object):
  """Wallet Authentication Service Definition
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetAccessToken = channel.unary_unary(
        '/Auth/GetAccessToken',
        request_serializer=auth__pb2.AccessTokenRequest.SerializeToString,
        response_deserializer=auth__pb2.AccessTokenResponse.FromString,
        )
    self.RevokeAccessToken = channel.unary_unary(
        '/Auth/RevokeAccessToken',
        request_serializer=auth__pb2.RevokeAccessTokenRequest.SerializeToString,
        response_deserializer=auth__pb2.RevokeAccessTokenResponse.FromString,
        )


class AuthServicer(object):
  """Wallet Authentication Service Definition
  """

  def GetAccessToken(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RevokeAccessToken(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_AuthServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetAccessToken': grpc.unary_unary_rpc_method_handler(
          servicer.GetAccessToken,
          request_deserializer=auth__pb2.AccessTokenRequest.FromString,
          response_serializer=auth__pb2.AccessTokenResponse.SerializeToString,
      ),
      'RevokeAccessToken': grpc.unary_unary_rpc_method_handler(
          servicer.RevokeAccessToken,
          request_deserializer=auth__pb2.RevokeAccessTokenRequest.FromString,
          response_serializer=auth__pb2.RevokeAccessTokenResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Auth', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
